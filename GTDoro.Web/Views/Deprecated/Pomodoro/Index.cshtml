@model PagedList.IPagedList<GTDoro.Core.Models.Pomodoro>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
@using (Html.BeginForm())
{

    <label for="StatusFilter">Filter by status</label>
    @Html.DropDownList("StatusFilter", EnumHelper.GetSelectList(typeof(GTDoro.Core.Models.PomodoroStatus)), "(All)")
    <input type="submit" value="Search" />
}

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Project", "Index", new { sortOrder = ViewBag.ProjectSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Task", "Index", new { sortOrder = ViewBag.TaskSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>            
            @Html.ActionLink("Action", "Index", new { sortOrder = ViewBag.ActionSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Start", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Start
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            <span class="gt-project">@Html.ActionLink(item.Action.Task.Project.Code, "Details", "Project", new { id = item.Action.Task.Project.ID }, null)</span>
        </td>
        <td>
            <span class="gt-task">@Html.ActionLink(item.Action.Task.Code, "Details", "Task", new { id = item.Action.Task.ID }, null)</span>
        </td>
        <td>            
            <span class="gt-action">@Html.ActionLink(item.Action.Name, "Details", "Action", new { id = item.Action.ID }, null)</span>
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StartLocal)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))