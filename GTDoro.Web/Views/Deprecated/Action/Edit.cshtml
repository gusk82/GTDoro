@model GTDoro.Core.Models.Action
@using GTDoro.Core.Models;

@{
    ViewBag.Operation = GTDoro.Core.Models.Operation.EditAction;
    Layout = "~/Views/Action/_ActionLayout.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.CreationDate)
        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @maxlength = Settings.PTA_NAME_MAX_LENGTH })
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control item-description", @maxlength = Settings.PTA_DESCRIPTION_MAX_LENGTH })
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Estimate, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.Estimate, new { type = "number", @class = "form-control", min = "0", max = "12" })
                        @Html.ValidationMessageFor(model => model.Estimate)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Priority, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EnumDropDownListFor(model => model.Priority, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Priority)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.IsPersistent, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.IsPersistent)
                        @Html.ValidationMessageFor(model => model.IsPersistent)
                    </div>
                </div>
            </div>

            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Deadline, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Deadline)
                    </div>
                </div>
                @if (Model.IsFinished)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.EndDate, new { @class = "col-md-4 control-label" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.EndDate)
                            @Html.ValidationMessageFor(model => model.EndDate)
                        </div>
                    </div>
                }
                @Html.HiddenFor(model => model.Status)
                @*<div class="form-group">
                        @Html.LabelFor(model => model.Status, new { @class = "col-md-4 control-label" })
                        <div class="col-md-8">
                            @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Status)
                        </div>
                    </div>*@

                    @*<div class="form-group">
                            @Html.Label("Task", new { @class = "col-md-4 control-label" })
                            <div class="col-md-8">
                                @Html.DropDownList("TaskID", null, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TaskID)
                            </div>
                        </div>*@
                    @Html.HiddenFor(model => model.TaskID)
                </div>
            </div>
            <div class="form-group last-form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" class="btn btn-primary">
                        <i class="fa fa-fw fa-save">&nbsp;</i>Save
                    </button>
                </div>
            </div>
        </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/Scripts/dates")
}
@Styles.Render("~/Content/jqueryui")

<script type="text/javascript">
    $(document).ready(function () {
        if ($('#IsPersistent').is(':checked')) {
            $('#@Html.IdFor(model => model.Estimate)').attr("disabled", "disabled");
        }
        $('#@Html.IdFor(model => model.IsPersistent)').on('ifChecked', function (event) {
            $('#@Html.IdFor(model => model.Estimate)').attr("disabled", "disabled");
        })
        $('#@Html.IdFor(model => model.IsPersistent)').on('ifUnchecked', function (event) {
            $('#@Html.IdFor(model => model.Estimate)').removeAttr("disabled");
        })
        sortSelectListByValue($('#Priority'))
    });    
</script>