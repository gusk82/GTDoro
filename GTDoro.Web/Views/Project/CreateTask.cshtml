@model GTDoro.Core.Models.Project
@using GTDoro.Core.Models;

@{
    ViewBag.Operation = GTDoro.Core.Models.Operation.CreateTask;
    Task newTask = (Task) ViewBag.NewTask;
}

@using (Ajax.BeginForm("CreateTask", new AjaxOptions { UpdateTargetId = "form-create" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">

        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => newTask.ProjectID)

        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => newTask.Code, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => newTask.Code, new { @class = "form-control", @maxlength = Task.CODE_MAX_LENGTH })
                        @Html.ValidationMessageFor(model => newTask.Code)
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => newTask.Name, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => newTask.Name, new { @class = "form-control", @maxlength = Settings.PTA_NAME_MAX_LENGTH })
                @Html.ValidationMessageFor(model => newTask.Name)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => newTask.Description, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => newTask.Description, new { @class = "form-control item-description", @maxlength = Settings.PTA_DESCRIPTION_MAX_LENGTH })
                @Html.ValidationMessageFor(model => newTask.Description)
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => newTask.Priority, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EnumDropDownListFor(model => newTask.Priority, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => newTask.Priority)
                    </div>
                </div>
            </div>

        </div>

        <div class="form-group last-form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-primary" name="submitButton" value="0">
                    <i class="fa fa-fw fa-save">&nbsp;</i>Save
                </button>
                <span class="separator">&nbsp;</span>
                <button type="submit" class="btn btn-primary" name="submitButton" value="1">
                    <i class="fa fa-save"></i>
                    <i class="fa fa-fw fa-plus">&nbsp;</i>Create more
                </button>
            </div>
        </div>
    </div>
    
    if (ViewBag.collectedThingID != null)
    {
        @Html.Hidden("collectedThingID", ((int)ViewBag.collectedThingID).ToString())
    }
}

<script type="text/javascript">
    $(document).ready(function () {
        $('#newTask_Code').focus();
        sortSelectListByValue($('#Priority'))
    });
</script>
