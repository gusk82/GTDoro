@model GTDoro.Models.Identity.LoginViewModel
@{
    Layout = "";
    string LoginError = string.Empty;
    if (TempData["LoginError"] != null && !string.IsNullOrWhiteSpace(TempData["LoginError"] as string))
    {
        LoginError = TempData["LoginError"] as string;
        TempData["LoginError"] = string.Empty;
    }
}

<div class="row">    
    @using (Html.BeginForm("LightLogin", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
    <div style="padding-top: 7px; padding-bottom: 15px">
        <section id="loginForm">
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-1 control-label" })
                    <div class="col-md-3">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-1 control-label" })
                    <div class="col-md-2">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-1" id="remember">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                    <div class="col-md-1">
                        <label class="control-label text-danger">@Html.Raw(LoginError)</label>
                    </div>
                    <div class="col-md-1">
                        <input type="submit" value="Log in" class="btn btn-default" />
                    </div>
                </div>
        </section>
    </div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}